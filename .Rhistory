setwd("~/Projects/BcEudicotGWAS/")
#-------------------------------------------------------------
#load data
ModDat <- read.csv("data/MetaAnalysis/HaMetaDat.csv")
names(ModDat)
#-------------------------------------------------------------
#check assumptions
#check normality of Scale.LS
require(car)
ModDat$Scale.LS.t <- ModDat$Scale.LS + 1
#not quite normal
qqp(ModDat$Scale.LS.t, "norm")
#---------------------------------------------------------------
#try removing isolates missing from one experiment
HaSumm <- as.data.frame(with(ModDat, table(IsolateID,Exp)))
#missing Exps: 1.05.04 (1), KGB1 (2)
OgDat <- ModDat
#do separately due to error
ModDat <- subset(ModDat, IsolateID != ("1.05.04"))
ModDat <- subset(ModDat, IsolateID != ("KGB1"))
#run the model
library(lme4); library(car); library(lmerTest)
fullmod <- lmer(Scale.LS ~ IsolateID + Domest/PlantGeno + IsolateID:Domest/PlantGeno + IsolateID:Domest + (1|Exp) + (1|Exp/Rep) + (1|Exp:IsolateID) + (1|Exp/Domest/PlantGeno), data = ModDat)
fullmod2 <- lmer(Scale.LS ~ IsolateID + Domest/PlantGeno + IsolateID:Domest/PlantGeno + IsolateID:Domest + (1|Exp) + (1|Exp:IsolateID) + (1|Exp/Domest/PlantGeno), data = ModDat)
fullmod3 <- lmer(Scale.LS ~ IsolateID + Domest/PlantGeno + IsolateID:Domest/PlantGeno + IsolateID:Domest + (1|Exp) + (1|Exp:IsolateID) + (1|Exp/Domest/PlantGeno) + (1|Domest/PlantGeno/IndPlant), data = ModDat)
library(rethinking)
data(rugged)
d <- rugged
d$log_gdp <- log(d$rgdppc_2000)
dd <- d[ complete.cases(d$rgdppc_2000) , ]
#8.3
#old method: fit interaction model
m8.1 <- map(
alist(
log_gdp ~ dnorm( mu , sigma ) ,
mu <- a + bR*rugged + bA*cont_africa + bAR*rugged*cont_africa ,
a ~ dnorm(0,100),
bR ~ dnorm(0,10),
bA ~ dnorm(0,10),
bAR ~ dnorm(0,10),
sigma ~ dunif(0,10)
) ,
data=dd )
precis(m8.1)
dd.trim <- dd[ , c("log_gdp","rugged","cont_africa") ]
str(dd.trim)
require(installr)
updateR()
rm(list=ls())
setwd("~/Projects/BcEudicotGWAS/")
#-------------------------------------------------------------
#load data
ModDat <- read.csv("data/MetaAnalysis/HaMetaDat.csv")
names(ModDat)
#-------------------------------------------------------------
#check assumptions
#check normality of Scale.LS
require(car)
ModDat$Scale.LS.t <- ModDat$Scale.LS + 1
#not quite normal
qqp(ModDat$Scale.LS.t, "norm")
#---------------------------------------------------------------
#try removing isolates missing from one experiment
HaSumm <- as.data.frame(with(ModDat, table(IsolateID,Exp)))
#missing Exps: 1.05.04 (1), KGB1 (2)
OgDat <- ModDat
#do separately due to error
ModDat <- subset(ModDat, IsolateID != ("1.05.04"))
ModDat <- subset(ModDat, IsolateID != ("KGB1"))
#run the model
library(lme4); library(car); library(lmerTest)
fullmod3 <- lmer(Scale.LS ~ IsolateID + Domest/PlantGeno + IsolateID:Domest/PlantGeno + IsolateID:Domest + (1|Exp) + (1|Exp:IsolateID) + (1|Exp/Domest/PlantGeno) + (1|Domest/PlantGeno/IndPlant), data = ModDat)
fullmod4 <- lmer(Scale.LS ~ IsolateID + Domest/PlantGeno + IsolateID:Domest/PlantGeno + IsolateID:Domest + (1|Exp) + (1|Exp/Rep) + (1|Exp/Rep/Flat) + (1|Exp:IsolateID) + (1|Exp/Domest/PlantGeno), data = ModDat)
rm(list=ls())
setwd("~/Projects/BcEudicotGWAS/")
#-------------------------------------------------------------
#load data
ModDat <- read.csv("data/MetaAnalysis/HaMetaDat.csv")
names(ModDat)
#-------------------------------------------------------------
#check assumptions
#check normality of Scale.LS
require(car)
ModDat$Scale.LS.t <- ModDat$Scale.LS + 1
#not quite normal
qqp(ModDat$Scale.LS.t, "norm")
#---------------------------------------------------------------
#try removing isolates missing from one experiment
HaSumm <- as.data.frame(with(ModDat, table(IsolateID,Exp)))
#missing Exps: 1.05.04 (1), KGB1 (2)
OgDat <- ModDat
#do separately due to error
ModDat <- subset(ModDat, IsolateID != ("1.05.04"))
ModDat <- subset(ModDat, IsolateID != ("KGB1"))
#run the model
library(lme4); library(car); library(lmerTest)
fullmod4 <- lmer(Scale.LS ~ IsolateID + Domest/PlantGeno + IsolateID:Domest/PlantGeno + IsolateID:Domest + (1|Exp) + (1|Exp/Rep) + (1|Exp/Rep/Flat) + (1|Exp:IsolateID) + (1|Exp/Domest/PlantGeno), data = ModDat)
Sys.time()
sink(file='output/ModelOutputs/HcFullMod_061616.txt')
print("fullmod4 <- lmer(Scale.LS ~ IsolateID + Domest/PlantGeno + IsolateID:Domest/PlantGeno + IsolateID:Domest + (1|Exp) + (1|Exp/Rep) + (1|Exp/Rep/Flat) + (1|Exp:IsolateID) + (1|Exp/Domest/PlantGeno), data = ModDat)")
Sys.time()
rand(fullmod4)
Anova(fullmod4, type=2)
anova(fullmod4)
rm(list=ls())
setwd("~/Projects/BcEudicotGWAS/")
#-------------------------------------------------------------
#load data
ModDat <- read.csv("data/MetaAnalysis/HaMetaDat.csv")
names(ModDat)
#-------------------------------------------------------------
#check assumptions
#check normality of Scale.LS
require(car)
ModDat$Scale.LS.t <- ModDat$Scale.LS + 1
#not quite normal
qqp(ModDat$Scale.LS.t, "norm")
#---------------------------------------------------------------
#try removing isolates missing from one experiment
HaSumm <- as.data.frame(with(ModDat, table(IsolateID,Exp)))
#missing Exps: 1.05.04 (1), KGB1 (2)
OgDat <- ModDat
#do separately due to error
ModDat <- subset(ModDat, IsolateID != ("1.05.04"))
ModDat <- subset(ModDat, IsolateID != ("KGB1"))
#run the model
library(lme4); library(car); library(lmerTest)
fullmod5 <- lmer(Scale.LS ~ IsolateID + Domest/PlantGeno + IsolateID:Domest/PlantGeno + IsolateID:Domest + (1|Exp) +  (1|Exp:IsolateID) + (1|Exp:Domest), data = ModDat)
Sys.time()
sink(file='output/ModelOutputs/HcFullMod_061716.txt')
print("fullmod5 <- lmer(Scale.LS ~ IsolateID + Domest/PlantGeno + IsolateID:Domest/PlantGeno + IsolateID:Domest + (1|Exp) +  (1|Exp:IsolateID) + (1|Exp:Domest), data = ModDat)")
Sys.time()
rand(fullmod5)
Anova(fullmod5, type=2)
anova(fullmod5)
Sys.time()
sink()
rm(list=ls())
setwd("~/Projects/BcEudicotGWAS/")
#-------------------------------------------------------------
#load data
ModDat <- read.csv("data/MetaAnalysis/HaMetaDat.csv")
names(ModDat)
#-------------------------------------------------------------
#check assumptions
#check normality of Scale.LS
require(car)
ModDat$Scale.LS.t <- ModDat$Scale.LS + 1
#not quite normal
qqp(ModDat$Scale.LS.t, "norm")
#---------------------------------------------------------------
#try removing isolates missing from one experiment
HaSumm <- as.data.frame(with(ModDat, table(IsolateID,Exp)))
#missing Exps: 1.05.04 (1), KGB1 (2)
OgDat <- ModDat
#do separately due to error
ModDat <- subset(ModDat, IsolateID != ("1.05.04"))
ModDat <- subset(ModDat, IsolateID != ("KGB1"))
#run the model
library(lme4); library(car); library(lmerTest)
attach(ModDat)
out <- split( ModDat , f = ModDat$PlantGeno)
head(out[[1]]) #100 elements, max. 69 obs per isolate
read.csv("output/ModelOutputs/HaLSMeans_062016.csv")
phenos <- read.csv("output/ModelOutputs/HaLSMeans_062016.csv")
phenos <- phenos[,c("Estimate", "Plant")]
View(phenos)
phenos <- read.csv("output/ModelOutputs/HaLSMeans_062016.csv")
View(phenos)
phenos <- phenos[,c("IsolateID", "Estimate", "Plant")]
library(tidyr)
phenos_w <- spread(phenos, "Plant", "Estimate")
View(phenos_w)
write.csv(phenos_w, "output/ModelOutputs/HaLSM_forbigRR.csv")
rm(list=ls())
setwd("~/Projects/BcEudicotGWAS/data/MetaAnalysis")
#-------------------------------------------------------------
#load data
MyData <- read.csv("FULLMetaDat.csv")
#rename so that Domest is Domesticated vs. Wild vs. landraces
MyData$Domest[MyData$Domest == 'D'] <- 'Domesticated'
MyData$Domest[MyData$Domest == 'Dm'] <- 'Domesticated'
MyData$Domest[MyData$Domest == 'W'] <- 'Wild'
MyData$Domest[MyData$Domest == 'Wl'] <- 'Wild'
#-------------------------------------------------------------
#violin plot of lesion size by plant species
attach(MyData)
library(ggplot2)
p <- ggplot(MyData, aes(factor(Taxon), Scale.LS, fill=Domest))
p + geom_violin(trim=T)+
ylim(0,5) +
theme( axis.title.x = element_blank()) +
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
install.packages('ggplot2')
rm(list=ls())
setwd("~/Projects/BcEudicotGWAS/data/MetaAnalysis")
#-------------------------------------------------------------
#load data
MyData <- read.csv("FULLMetaDat.csv")
#rename so that Domest is Domesticated vs. Wild vs. landraces
MyData$Domest[MyData$Domest == 'D'] <- 'Domesticated'
MyData$Domest[MyData$Domest == 'Dm'] <- 'Domesticated'
MyData$Domest[MyData$Domest == 'W'] <- 'Wild'
MyData$Domest[MyData$Domest == 'Wl'] <- 'Wild'
attach(MyData)
library(ggplot2)
p <- ggplot(MyData, aes(factor(Taxon), Scale.LS, fill=Domest))
p + geom_violin(trim=T)+
ylim(0,5) +
theme( axis.title.x = element_blank()) +
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme( axis.title.x = element_blank()) +
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
rm(list=ls())
setwd("~/Projects/BcEudicotGWAS/")
#-------------------------------------------------------------
#load data
MyData <- read.csv("data/MetaAnalysis/FULLMetaDat.csv")
#rename so that Domest is Domesticated vs. Wild vs. landraces
MyData$Domest[MyData$Domest == 'D'] <- 'Domesticated'
MyData$Domest[MyData$Domest == 'Dm'] <- 'Domesticated'
MyData$Domest[MyData$Domest == 'W'] <- 'Wild'
MyData$Domest[MyData$Domest == 'Wl'] <- 'Wild'
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(size = 14, angle = 45, hjust =1), axis.text.y = element_text(size = 14)) +
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p <- ggplot(MyData, aes(factor(Taxon), Scale.LS, fill=Domest))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(size = 14, angle = 45, hjust =1), axis.text.y = element_text(size = 14)) +
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14)) +
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 45, hjust = 1)) +
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 45, hjust = 1)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 1)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 1, vjust = 1)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 1, vjust = 2)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 2, vjust = 1)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0, vjust = 1)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.5, vjust = 1)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.5, vjust = 0)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.5, vjust = 0.5)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.5, vjust = 0.75)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.5, vjust = 0.8)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.5, vjust = 0.9)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.5, vjust = 1)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.5, vjust = 0.5)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.5, vjust = 0.6)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.5, vjust = 0.65)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.6, vjust = 0.65)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.65, vjust = 0.65)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.65, vjust = 0.55)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.65, vjust = 0.75)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.65, vjust = 0.85)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.65, vjust = 0.8)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
tiff("plots/Eudicots_LesionSize_beanplots.tiff", width=6, height=4, units='in', res=600)
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.65, vjust = 0.8)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))
dev.off()
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.65, vjust = 0.8)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))+
labs(fill="")
tiff("plots/Eudicots_LesionSize_beanplots.tiff", width=8, height=4, units='in', res=600)
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.65, vjust = 0.8)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))+
labs(fill="")
dev.off()
tiff("plots/Eudicots_LesionSize_beanplots.tiff", width=10, height=4, units='in', res=600)
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.65, vjust = 0.8)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))+
labs(fill="")
dev.off()
rm(list=ls())
setwd("~/Projects/BcEudicotGWAS/")
#-------------------------------------------------------------
#load data
MyData <- read.csv("data/MetaAnalysis/FULLMetaDat.csv")
#rename so that Domest is Domesticated vs. Wild vs. landraces
MyData$Domest[MyData$Domest == 'D'] <- 'Domesticated'
MyData$Domest[MyData$Domest == 'Dm'] <- 'Domesticated'
MyData$Domest[MyData$Domest == 'W'] <- 'Wild'
MyData$Domest[MyData$Domest == 'Wl'] <- 'Wild'
attach(MyData)
library(ggplot2)
p <- ggplot(MyData, aes(factor(Taxon), Scale.LS, fill=Domest))
p + geom_violin(trim=T)+
ylim(0,5) +
theme_bw()+
theme(text = element_text(size=14), axis.title.x = element_blank(), axis.text.y = element_text(size = 14), axis.text.x = element_text(size = 14, angle = 30, hjust = 0.65, vjust = 0.8)) +
scale_x_discrete(labels=c("Brassica rapa", "Cichorium endivia", "Cichorium intybus", "Glycine max", "Helianthus annuus", "Solanum spp."))+
ylab("Scaled Lesion Size")+
geom_boxplot(width=0.1, position = position_dodge(width = 0.9))+
labs(fill="")
means <- ddply(MyData, "IsolateID", summarise, meanLS = mean(Scale.LS))
library(plyr)
means <- ddply(MyData, "IsolateID", summarise, meanLS = mean(Scale.LS))
View(means)
getwd()
write.csv(means, "/output/MeanLsAllTaxa.csv")
write.csv(means, "output/MeanLsAllTaxa.csv")
library(rstan)
data {
int<lower=0> J; // number of schools
real y[J]; // estimated treatment effects
real<lower=0> sigma[J]; // s.e. of effect estimates
}
parameters {
real mu;
real<lower=0> tau;
real eta[J];
}
transformed parameters {
real theta[J];
for (j in 1:J)
theta[j] = mu + tau * eta[j];
}
model {
target += normal_lpdf(eta | 0, 1);
target += normal_lpdf(y | theta, sigma);
}
data {
int<lower=0> J; // number of schools
real y[J]; // estimated treatment effects
real<lower=0> sigma[J]; // s.e. of effect estimates
}
parameters {
real mu;
real<lower=0> tau;
real eta[J];
}
transformed parameters {
real theta[J];
for (j in 1:J)
theta[j] = mu + tau * eta[j];
}
model {
target += normal_lpdf(eta | 0, 1);
target += normal_lpdf(y | theta, sigma);
}
